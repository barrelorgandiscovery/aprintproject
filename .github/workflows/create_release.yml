# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: APrint Java CI

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - master
      - 'releases/**'
    # Sequence of patterns matched against refs/tags
    tags:        
      - v*

jobs:
  build-windows-appimage:
    name: Build AppImage on Windows
    runs-on: windows-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v2

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build createjpackage -x test

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v2
      with:
        path: ./bundle/build/distributions/aprint
        name: windows-aprint
        retention-days: 1

  build-linux-appimage:
    name: Build AppImage on Linux
    runs-on: ubuntu-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v2

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build createjpackage -x test

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v2
      with:
        path: ./bundle/build/distributions/aprint
        name: ubuntu-aprint
        retention-days: 1



  build-macos-appimage:
    name: Build AppImage on MacOsX
    runs-on: macos-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v2

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build createjpackage -x test

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v2
      with:
        path: ./bundle/build/distributions/aprint
        name: macos-aprint
        retention-days: 1


  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux-appimage, build-windows-appimage, build-macos-appimage]
    steps:

# DOWNLOAD INSTALLERS
    - id: download-linux-appimage
      name: Download Linux appimage
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-aprint

    - id: download-windows-image
      name: Download Windows appimage
      uses: actions/download-artifact@v2
      with:
        name: windows-aprint

    - id: download-macos-image
      name: Download MacOs appimage
      uses: actions/download-artifact@v2
      with:
        name: macos-aprint

# CREATE GITHUB RELEASE AND ADD ASSETS
    - id: create-release
      name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.tag }}
        release_name: release-${{ github.tag }}
        draft: true
        prerelease: true
    - id: release-linux-appimage
      name: Release Linux appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: windows-aprint.zip
        asset_name: -windows-aprint.zip
        asset_content_type: application/x-binary

    - id: release-windows-appimage
      name: Release Windows appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: windows-aprint.zip
        asset_name: windows-aprint.zip
        asset_content_type: application/x-binary

    - id: release-macos-appimage
      name: Release macos appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: macos-aprint.zip
        asset_name: macos-aprint.zip
        asset_content_type: application/x-binary


