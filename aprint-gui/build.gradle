import java.text.*

buildscript {
    repositories {
		maven {
		 url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
	  classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java-library'
apply plugin: 'groovy'


// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

compileJava {
        options.encoding = 'iso-8859-1'
        //enable incremental compilation
        //options.incremental = true
        options.fork=true
        options.forkOptions.executable =  System.getenv('JAVA_HOME') + File.separator + "bin" + File.separator + "javac"
        options.compilerArgs << "-XDignore.symbol.file"
}

sourcesJar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE) 
}

// In this section you declare the dependencies for your production and test code
dependencies {
    api project(':aprint-core')
    api files(fileTree(dir:"${projectDir}/libs" , include:['**/*.jar']).toList())
    
    // https://mvnrepository.com/artifact/org.anarres.vfsjfilechooser/filechooser-core
	// compile group: 'org.anarres.vfsjfilechooser', name: 'filechooser-core', version: '1.0.0'
    
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.0'
    
    implementation 'com.formdev:flatlaf:2.6'
    
    testImplementation 'junit:junit:4.12'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        groovy {
            srcDir 'src/main/groovy'
        }
        
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/java'
			srcDir 'src/main/groovy'
        }
    }
    test {
    	java {
    		srcDir 'src/test/java'
    	}
    	resources {
    		srcDir 'src/test/resources'
    	}
    }
    
    tasks {
        java {
            srcDir 'srcTasksAnt/main/java'
        }
    }
}


task listJars() {

   doLast {
     println "start ${projectDir}"
     
     print fileTree(dir: "${projectDir}/libs", include:['**/*.jar']).toList()

   }

}

task fatJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar, dependsOn: jar) {

  baseName = "aprint"
  mergeServiceFiles()  
  
  from(sourceSets.main.output)

	exclude 'META-INF/MANIFEST.MF'
	exclude 'META-INF/*.RSA'
	exclude 'META-INF/*.PF'
	exclude 'META-INF/*.SF'
	exclude 'META-INF/dmginfo'
        exclude 'META-INF/INDEX.LIST'

  configurations = [project.configurations.compileClasspath] 
  
  manifest {
	  attributes 'Implementation-Title': 'APrint Studio',
	     'Main-Class': 'org.barrelorgandiscovery.gui.aprintng.APrintApplicationBootStrap'
  }
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE) 
}

test {

 useJUnitPlatform()

}
